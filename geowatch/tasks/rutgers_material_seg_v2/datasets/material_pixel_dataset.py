# Autogenerated via:
# python ~/code/watch/dev/maintain/mirror_package_geowatch.py
from watch.tasks.rutgers_material_seg_v2.datasets.material_pixel_dataset import parser, parser, parser, parser, parser, np, torch


def __getattr__(key):
    import watch.tasks.rutgers_material_seg_v2.datasets.material_pixel_dataset as mirror
    return getattr(mirror, key)


def __dir__():
    import watch.tasks.rutgers_material_seg_v2.datasets.material_pixel_dataset as mirror
    return dir(mirror)


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('--dataset', type=str, default='iarpa_drop4_materials')
    parser.add_argument('--split', type=str, default='valid')
    parser.add_argument('--feature_type', type=str, default='pixel')
    parser.add_argument('--test_type', type=str, default=None)
    parser.add_argument('--seed_num', type=int, default=0)
    args = parser.parse_args()

    # Set random seeds.
    np.random.seed(args.seed_num)
    torch.random.manual_seed(args.seed_num)

    # Run a test.
    if args.test_type is None:
        dataset = MaterialPixelDataset(args.dataset, split=args.split, feature_type=args.feature_type)
        example = dataset.__getitem__(0)
        print(example['pixel_data'].shape)
    elif args.test_type == 'compare_train_valid_dists':
        test_compare_train_valid_dists(args)
