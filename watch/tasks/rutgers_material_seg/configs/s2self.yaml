# Ours
# location: server
location: local
data:
  type: semantic_seg
  name: s2self
  num_classes: 128
  window_size: 5
  image_size: 128
  time_steps: 2
  weights: []
  # channels: B02|B03|B04|B05|B06|B07|B08|B11|B12|B8A
  channels: B02|B03|B04|B05|B06|B07|B08|B11|B12
  local:
    model_save_dir: /home/native/projects/data/smart_watch/models/
    train_dir: /media/native/data2/data/S2_Unlabeled_AOIs/
    test_dir: /media/native/data2/data/S2_Unlabeled_AOIs/
    train_coco_json: /media/native/data/data/smart_watch_dvc/extern/onera_2018/onera_train.kwcoco.json
    test_coco_json: /media/native/data/data/smart_watch_dvc/extern/onera_2018/onera_train.kwcoco.json
    val_dir:
  server:
    model_save_dir: /data4/peri/smart_watch/models/
    train_dir: /data4/datasets/smart_watch_dvc/extern/onera_2018/
    test_dir: /data4/datasets/smart_watch_dvc/extern/onera_2018/
    val_dir: /data4/datasets/smart_watch_dvc/extern/onera_2018/
    train_coco_json: /data4/datasets/smart_watch_dvc/extern/onera_2018/onera_train.kwcoco.json
    test_coco_json: /data4/datasets/smart_watch_dvc/extern/onera_2018/onera_test.kwcoco.json

training:
  backbone: #resnet18 #resnet101, resnet50
  model_name: shallow_seg #shallow_seg, deeplabWS
  model_feats_channels: [32, 32, 64, 64, 128] #[32, 32, 64, 64, 128], [64, 64, 128, 256, 512], [32, 32, 64, 128, 256], [64, 128, 256, 512, 1024] # this needs to match the correct number of layers in the model
  gn_n_groups: 32
  num_channels: 13
  out_features_dim: 10
  weight_std: True
  beta: False
  pretrained: False
  distributed: False
  learning_rate: 0.002 # best: 0.00007
  # resume: /home/native/projects/data/smart_watch/models/experiments_onera/tasks_experiments_onera_2021-10-04-22:26/experiments_epoch_75_loss_0.250858994956116_valmIoU_0.5220931783424729_time_2021-10-05-13:53:50.pth
  resume: False
  train_val_test_split: [0.95, 0.02, 0.03]
  epochs: 200
  start_epoch: 0
  batch_size: 8
  drop_last_batch: True
  momentum: 0.9
  weight_decay: 0.0001
  num_workers: 4
  test_with_full_supervision: 1

high_confidence_threshold:
  train_cutoff: 0.4
  val_cutoff: 0.4
  train_low_cutoff: 0.0
  val_low_cutoff: 0.0

evaluation:
  use_crf: False
  crf_t: 1
  crf_scale_factor: 1
  inference_window: 11

procedures:
  train:  True
  validate: True
