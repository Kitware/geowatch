{
  "$id": "region-model.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "definitions": {
    "geojson_coordinates": {
      "description": "A longitude/latitude pair of coordinates",
      "items": {
        "type": "number"
      },
      "minItems": 2,
      "maxItems": 2,
      "type": "array"
    },
    "geojson_ring": {
      "description": "A list of coordinate pairs, describing a perimeter",
      "items": {
        "$ref": "#/definitions/geojson_coordinates"
      },
      "minItems": 4,
      "type": "array"
    },
    "geojson_polygon": {
      "description": "A list of geojson rings, encoding a perimeter and zero or more voids within the polygon",
      "items": {
        "$ref": "#/definitions/geojson_ring"
      },
      "type": "array"
    },
    "geojson_multipolygon": {
      "description": "A list of geojson polygons, encoding a collection of polygons",
      "items": {
        "$ref": "#/definitions/geojson_polygon"
      },
      "type": "array"
    },
    "polygon": {
      "description": "a GeoJSON spec compliant Polygon object",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/geojson_polygon"
        },
        "type": {
          "const": "Polygon",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "region_properties": {
      "properties": {
        "type": {"const": "region", "type": "string"},
        "region_id": {"type": "string", "pattern": "^[A-Z]{2}_[RCS]\\d{3}$"},
        "version": {"type": "string", "pattern": "^\\d+\\.\\d+\\.\\d+$"},
        "mgrs": {"type": "string", "pattern": "\\d{2}[A-Z]{3}"},
        "model_content": {"enum": ["empty", "annotation", "proposed"]},
        "start_date": {"oneOf": [{"type": "null"}, {"type": "string", "format": "date"}]},
        "end_date": {"oneOf": [{"type": "null"}, {"type": "string", "format": "date"}]},
        "originator": {"enum": ["te", "pmo", "acc", "ara", "ast", "bla", "iai", "kit", "str", "iMERIT"]},
        "comments": {"type": ["string", "null"]},
        "performer_cache": {"type": "object"}
      },
      "required": [
        "type", "region_id", "version", "mgrs", "model_content", "start_date", "end_date", "originator"
      ]
    },
    "site_summary_properties": {
      "properties": {
        "type": {"const": "site_summary", "type": "string"},
        "site_id": {"type": "string", "pattern": "^[A-Z]{2}_[RCS]\\d{3}_\\d{4}$"},
        "version": {"type": "string", "pattern": "^\\d+\\.\\d+\\.\\d+$"},
        "mgrs": {"type": "string", "pattern": "\\d{2}[A-Z]{3}"},
        "status": {"enum": ["system_proposed", "system_confirmed", "system_rejected", "positive_annotated", "positive_partial", "positive_annotated_static", "positive_partial_static", "positive_pending", "positive_excluded", "negative", "ignore"]},
        "model_content": {"enum": ["annotation", "proposed"]},
        "start_date": {"oneOf": [{"type": "null"}, {"type": "string", "format": "date"}]},
        "end_date": {"oneOf": [{"type": "null"}, {"type": "string", "format": "date"}]},
        "originator": {"enum": ["te", "pmo", "acc", "ast", "ast", "bla", "iai", "kit", "str", "iMERIT"]},
        "score": {"type": "number", "minimum": 0, "maximum": 1},
        "validated": {"enum": ["True", "False"]},
        "annotation_cache": {"type": "object"}
      },
      "required": [
        "type", "site_id", "version", "mgrs", "model_content", "start_date", "end_date", "status", "originator"
      ]
    }
  },
  "properties": {
    "features": {
      "items": {
        "properties": {
          "geometry": {
            "$ref": "#/definitions/polygon"
          },
          "type":{
            "const": "Feature",
            "type": "string"
          },
          "properties": {
            "oneOf": [
              {"$ref": "#/definitions/region_properties"},
              {"$ref": "#/definitions/site_summary_properties"}
            ]}
          }
        },
        "required": [
          "type", "geometry", "properties"
        ]
      },
    "type": {
      "const": "FeatureCollection",
      "type": "string"
    }
  },
  "required": [
    "type",
    "features"
  ],
  "title": "Region Model object",
  "type": "object"
}
